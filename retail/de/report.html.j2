<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8"/>
  <title>Weekly Sales Briefing</title>
  <style>
    body { font-family: Arial, sans-serif; margin:0; padding:0; background:#f9f9f9; }
    .wrap { max-width: 960px; margin: 0 auto; background:#fff; }
    .header { background:#1E3A8A; color:#fff; padding:20px 40px; display:flex; align-items:center; border-radius:8px 8px 0 0; }
    .logo { background:#ccc; color:#000; padding:7px 22px; margin-left:auto; }
    h2 { background:#ddd; padding:8px; margin:24px 0 8px; }
    table { border-collapse: collapse; width:100%; text-align:le...olid #ddd; font-size:13px; border-radius:8px; overflow:hidden; }
    th, td { border:1px solid #ddd; padding:6px 8px; }
    .section { padding:40px; }
    .footer { background:#1E3A8A; color:#fff; text-align:center; font-size:12px; padding:10px 40px; border-radius:0 0 8px 8px; }
  </style>
</head>
<body>
  {# ---------- Format-Macros ---------- #}
  {% macro fmt0(x) -%}
    {%- if x is number -%}
      {{ "{:,.0f}".format(x).replace(",", "'") }}
    {%- else -%}
      {{ "" }}
    {%- endif -%}
  {%- endmacro %}

  {% macro fmt1(x) -%}
    {%- if x is number -%}
      {{ "{:,.1f}".format(x).replace(",", "'") }}
    {%- else -%}
      {{ "" }}
    {%- endif -%}
  {%- endmacro %}

  {% macro fmtpct(x) -%}
    {%- if x is number -%}
      {{ "{:.0f}%".format(x * 100) }}
    {%- else -%}
      {{ "" }}
    {%- endif -%}
  {%- endmacro %}

  {# --- Defensiver Zugriff auf Daten --- #}
  {% set week = (kpis.week | default({}, true)) %}
  {% set mtd  = (kpis.mtd  | default({}, true)) %}
  {% set ytd  = (kpis.ytd  | default({}, true)) %}

  <div class="wrap header">
    <div>
      <h1 style="margin:0;">Weekly Sales Briefing</h1>
      <div style="font-size:12px; opacity:0.8;">Automatisch generierter Wochenbericht</div>
    </div>
    <div class="logo">LOGO</div>
  </div>

  <div class="wrap section">
    <h2>üß≠ √úberblick</h2>
    <table>
      <thead>
        <tr>
          <th>Bereich</th>
          <th>Wert</th>
          <th>Œî vs. LY</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Umsatz (Week)</td>
          <td>{{ fmt1(week.NetAmount) }}</td>
          <td>{{ fmtpct(week.NetAmount_ChangePct) }}</td>
        </tr>
        <tr>
          <td>Transaktionen (Week)</td>
          <td>{{ fmt0(week.Transactions) }}</td>
          <td>{{ fmtpct(week.Transactions_ChangePct) }}</td>
        </tr>
        <tr>
          <td>Kunden (Week)</td>
          <td>{{ fmt0(week.Customers) }}</td>
          <td>{{ fmtpct(week.Customers_ChangePct) }}</td>
        </tr>
      </tbody>
    </table>

    <h2>üìù Narrative</h2>
    <p style="text-align:justify; line-height:1.6; font-size:16px;"><strong>Woche:</strong>  {{ narrative.summaryWeek | default('') }}</p>
    <p style="text-align:justify; line-height:1.6; font-size:16px;"><strong>MTD:</strong>   {{ narrative.summaryMTD | default('') }}</p>
    <p style="text-align:justify; line-height:1.6; font-size:16px;"><strong>YTD:</strong>   {{ narrative.summaryYTD | default('') }}</p>

    <h2>üå§Ô∏è Wetter-Analyse</h2>
    <p style="text-align:justify; line-height:1.6; font-size:16px;">{{ narrative.weather | default('') }}</p>

    {# --- Wetter Chart (optional) --- #}
    {% if weatherChart %}
    <div class="section">
      <canvas id="tempChart" height="120"></canvas>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
    (function() {
      const cfg = {{ weatherChart | tojson }};
      const ctx = document.getElementById('tempChart').getContext('2d');
      const weekend = cfg.weekend || [];
      const weekendBg = {
        id: 'weekendBg',
        beforeDraw(chart) {
          const {chartArea, scales:{x}, ctx} = chart;
          if (!chartArea) return;
          ctx.save();
          ctx.globalAlpha = 0.06;
          ctx.fillStyle = '#000';
          weekend.forEach((isWknd, i) => {
            if (!isWknd) return;
            const x0 = x.getPixelForValue(i) - (x.getPixelForValue(i) - x.getPixelForValue(i-1))/2;
            const x1 = x.getPixelForValue(i) + (x.getPixelForValue(i+1) - x.getPixelForValue(i))/2;
            ctx.fillRect(x0, chartArea.top, x1 - x0, chartArea.bottom - chartArea.top);
          });
          ctx.restore();
        }
      };
      new Chart(ctx, {
        type: 'line',
        data: {
          labels: cfg.labels,
          datasets: [
            { label: cfg.series[0].name, data: cfg.series[0].data, spanGaps: true, tension: 0.25 },
            { label: cfg.series[1].name, data: cfg.series[1].data, spanGaps: true, tension: 0.25 }
          ]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { position: 'top' },
            tooltip: { intersect: false, mode: 'index' }
          },
          scales: {
            y: { title: { display: true, text: '¬∞C' } },
            x: { title: { display: true, text: 'Wochentage' } }
          },
          elements: { point: { radius: 3 } }
        },
        plugins: [weekendBg]
      });
    })();
    </script>
    {% endif %}

    <h2>üì¶ Sortiment & Empfehlungen</h2>
    <p style="text-align:justify; line-height:1.6; font-size:16px;">{{ narrative.stock | default('') }}</p>
  </div>

  <div class="wrap footer">
    Dieses Briefing wurde automatisch erstellt. Bei Fragen wende dich an XXX.
  </div>
</body>
</html>
